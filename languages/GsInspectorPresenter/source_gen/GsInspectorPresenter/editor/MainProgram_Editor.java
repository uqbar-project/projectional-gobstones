package GsInspectorPresenter.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.impl.cellActions.CellAction_Comment;
import jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;
import jetbrains.mps.nodeEditor.cells.EditorCell_Indent;
import jetbrains.mps.nodeEditor.cells.EditorCell_Component;
import javax.swing.JComponent;
import GsDesktopUI.view.PreviewFactory;

public class MainProgram_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_5qy9kg_a(editorContext, node);
  }
  private EditorCell createCollection_5qy9kg_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_5qy9kg_a");
    editorCell.setBig(true);
    editorCell.setAction(CellActionType.COMMENT, new CellAction_Comment(node));
    editorCell.addEditorCell(this.createCollection_5qy9kg_a0(editorContext, node));
    editorCell.addEditorCell(this.createIndentCell_5qy9kg_b0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_5qy9kg_c0(editorContext, node));
    return editorCell;
  }
  private EditorCell createCollection_5qy9kg_a0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_5qy9kg_a0");
    editorCell.addEditorCell(this.createComponent_5qy9kg_a0a(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_5qy9kg_b0a(editorContext, node));
    return editorCell;
  }
  private EditorCell createComponent_5qy9kg_a0a(EditorContext editorContext, SNode node) {
    EditorCell editorCell = editorContext.getCellFactory().createEditorComponentCell(node, "jetbrains.mps.lang.core.editor.alias");
    return editorCell;
  }
  private EditorCell createRefNode_5qy9kg_b0a(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new MainProgram_Editor.bodySingleRoleHandler_5qy9kg_b0a(node, MetaAdapterFactory.getContainmentLink(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a58e1dL, 0xa107f9943a74ebdL, "body"), editorContext);
    return provider.createCell();
  }
  private class bodySingleRoleHandler_5qy9kg_b0a extends SingleRoleCellProvider {
    public bodySingleRoleHandler_5qy9kg_b0a(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    public EditorCell createChildCell(EditorContext editorContext, SNode child) {
      EditorCell editorCell = super.createChildCell(editorContext, child);
      installCellInfo(child, editorCell);
      return editorCell;
    }
    public void installCellInfo(SNode child, EditorCell editorCell) {
      editorCell.setSubstituteInfo(new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext));
      if (editorCell.getRole() == null) {
        editorCell.setRole("body");
      }
    }


    @Override
    protected EditorCell createEmptyCell() {
      EditorCell editorCell = super.createEmptyCell();
      editorCell.setCellId("empty_body");
      installCellInfo(null, editorCell);
      return editorCell;
    }

    protected String getNoTargetText() {
      return "<no " + "body" + ">";
    }

  }
  private EditorCell createIndentCell_5qy9kg_b0(EditorContext editorContext, SNode node) {
    EditorCell_Indent editorCell = new EditorCell_Indent(editorContext, node);
    return editorCell;
  }
  private EditorCell createCollection_5qy9kg_c0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(editorContext, node);
    editorCell.setCellId("Collection_5qy9kg_c0");
    editorCell.addEditorCell(this.createJComponent_5qy9kg_a2a(editorContext, node));
    return editorCell;
  }
  private EditorCell createJComponent_5qy9kg_a2a(EditorContext editorContext, SNode node) {
    EditorCell editorCell = EditorCell_Component.createComponentCell(editorContext, node, MainProgram_Editor._QueryFunction_JComponent_5qy9kg_a0c0(node, editorContext), "_5qy9kg_a2a");
    editorCell.setCellId("JComponent_5qy9kg_a2a");
    return editorCell;
  }
  private static JComponent _QueryFunction_JComponent_5qy9kg_a0c0(final SNode node, final EditorContext editorContext) {
    return PreviewFactory.createPanel(node);
  }
}
