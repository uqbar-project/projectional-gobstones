package MPSGobstones.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptAndExpression = new ConceptDescriptorBuilder("MPSGobstones.structure.AndExpression", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a8d6e5L)).super_("MPSGobstones.structure.LogicalOperation").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a3bb71L)).parents("MPSGobstones.structure.LogicalOperation").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a3bb71L)).alias("&&", "Operaci\u00f3n l\u00f3gica").create();
  /*package*/ final ConceptDescriptor myConceptBinaryLike = new ConceptDescriptorBuilder("MPSGobstones.structure.BinaryLike", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x53c2c23e11d33879L)).interface_().create();
  /*package*/ final ConceptDescriptor myConceptBinaryOperation = new ConceptDescriptorBuilder("MPSGobstones.structure.BinaryOperation", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a8201dL)).super_("MPSGobstones.structure.Expression").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL)).parents("MPSGobstones.structure.Expression", "MPSGobstones.structure.BinaryLike").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL), MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x53c2c23e11d33879L)).childDescriptors(new ConceptDescriptorBuilder.Link(725219836248465438L, "left", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL), false, false, false), new ConceptDescriptorBuilder.Link(725219836248465441L, "right", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL), false, false, false)).children(new String[]{"left", "right"}, new boolean[]{false, false}).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptBlack = new ConceptDescriptorBuilder("MPSGobstones.structure.Black", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5610a48L)).super_("MPSGobstones.structure.Color").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5610a42L)).parents("MPSGobstones.structure.Color").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5610a42L)).alias("Negro", "Bolita de color negro").create();
  /*package*/ final ConceptDescriptor myConceptBlue = new ConceptDescriptorBuilder("MPSGobstones.structure.Blue", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5610a46L)).super_("MPSGobstones.structure.Color").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5610a42L)).parents("MPSGobstones.structure.Color").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5610a42L)).alias("Azul", "Bolita de color azul").create();
  /*package*/ final ConceptDescriptor myConceptBoardDefinition = new ConceptDescriptorBuilder("MPSGobstones.structure.BoardDefinition", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac51f62a7L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(9156895335218373290L, "rowsSize")).properties("rowsSize").childDescriptors(new ConceptDescriptorBuilder.Link(9156895335219234240L, "rows", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac52c7b77L), false, true, false)).children(new String[]{"rows"}, new boolean[]{true}).alias("Tablero", "").create();
  /*package*/ final ConceptDescriptor myConceptBoardRowDefinition = new ConceptDescriptorBuilder("MPSGobstones.structure.BoardRowDefinition", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac52c7b77L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(9156895335219231619L, "cells", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac5200080L), false, true, false)).children(new String[]{"cells"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptBooleanLiteral = new ConceptDescriptorBuilder("MPSGobstones.structure.BooleanLiteral", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a7f180L)).super_("MPSGobstones.structure.Expression").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL)).parents("MPSGobstones.structure.Expression").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL)).abstract_().alias("boolean", "Constante booleana").create();
  /*package*/ final ConceptDescriptor myConceptBooleanType = new ConceptDescriptorBuilder("MPSGobstones.structure.BooleanType", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a2abd4L)).super_("MPSGobstones.structure.Type").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a2abd5L)).parents("MPSGobstones.structure.Type").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a2abd5L)).alias("boolean", "Tipo booleano").create();
  /*package*/ final ConceptDescriptor myConceptCanBeRestricted = new ConceptDescriptorBuilder("MPSGobstones.structure.CanBeRestricted", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xc13f236fea48aedL)).interface_().create();
  /*package*/ final ConceptDescriptor myConceptCanMoveClaw = new ConceptDescriptorBuilder("MPSGobstones.structure.CanMoveClaw", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac51bd8d0L)).super_("MPSGobstones.structure.NativeFunction").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac51bb110L)).parents("MPSGobstones.structure.NativeFunction").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac51bb110L)).alias("puedeMover", "").create();
  /*package*/ final ConceptDescriptor myConceptCellDefinition = new ConceptDescriptorBuilder("MPSGobstones.structure.CellDefinition", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac5200080L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(9156895335218413697L, "blue"), new ConceptDescriptorBuilder.Prop(9156895335218413699L, "black"), new ConceptDescriptorBuilder.Prop(9156895335218413702L, "red"), new ConceptDescriptorBuilder.Prop(9156895335218413706L, "green")).properties("blue", "black", "red", "green").create();
  /*package*/ final ConceptDescriptor myConceptColor = new ConceptDescriptorBuilder("MPSGobstones.structure.Color", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5610a42L)).super_("MPSGobstones.structure.Value").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x43bfda4b30d4155eL)).parents("MPSGobstones.structure.Value").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x43bfda4b30d4155eL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptColorType = new ConceptDescriptorBuilder("MPSGobstones.structure.ColorType", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b56135e2L)).super_("MPSGobstones.structure.Type").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a2abd5L)).parents("MPSGobstones.structure.Type").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a2abd5L)).alias("color", "Color type").create();
  /*package*/ final ConceptDescriptor myConceptComparision = new ConceptDescriptorBuilder("MPSGobstones.structure.Comparision", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a001434L)).super_("MPSGobstones.structure.BinaryOperation").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a8201dL)).parents("MPSGobstones.structure.BinaryOperation").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a8201dL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptDiffOperation = new ConceptDescriptorBuilder("MPSGobstones.structure.DiffOperation", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac51bce0cL)).super_("MPSGobstones.structure.IntegerOperation").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e670253faaceL)).parents("MPSGobstones.structure.IntegerOperation").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e670253faaceL)).alias("-", "Substracci\u00f3n").create();
  /*package*/ final ConceptDescriptor myConceptDirection = new ConceptDescriptorBuilder("MPSGobstones.structure.Direction", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5614da9L)).super_("MPSGobstones.structure.Value").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x43bfda4b30d4155eL)).parents("MPSGobstones.structure.Value").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x43bfda4b30d4155eL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptDirectionType = new ConceptDescriptorBuilder("MPSGobstones.structure.DirectionType", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5614daaL)).super_("MPSGobstones.structure.Type").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a2abd5L)).parents("MPSGobstones.structure.Type").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a2abd5L)).alias("direction", "Direction type").create();
  /*package*/ final ConceptDescriptor myConceptDivOperation = new ConceptDescriptorBuilder("MPSGobstones.structure.DivOperation", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e670253faaccL)).super_("MPSGobstones.structure.IntegerOperation").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e670253faaceL)).parents("MPSGobstones.structure.IntegerOperation").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e670253faaceL)).alias("/", "Divisi\u00f3n entera").create();
  /*package*/ final ConceptDescriptor myConceptEast = new ConceptDescriptorBuilder("MPSGobstones.structure.East", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5614f42L)).super_("MPSGobstones.structure.Direction").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5614da9L)).parents("MPSGobstones.structure.Direction").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5614da9L)).alias("Este", "Direcci\u00f3n").create();
  /*package*/ final ConceptDescriptor myConceptEqualsTo = new ConceptDescriptorBuilder("MPSGobstones.structure.EqualsTo", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a00142eL)).super_("MPSGobstones.structure.Comparision").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a001434L)).parents("MPSGobstones.structure.Comparision").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a001434L)).alias("==", "Igualdad").create();
  /*package*/ final ConceptDescriptor myConceptExpression = new ConceptDescriptorBuilder("MPSGobstones.structure.Expression", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptFalse = new ConceptDescriptorBuilder("MPSGobstones.structure.False", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a81181L)).super_("MPSGobstones.structure.BooleanLiteral").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a7f180L)).parents("MPSGobstones.structure.BooleanLiteral").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a7f180L)).alias("False", "Constante booleana").create();
  /*package*/ final ConceptDescriptor myConceptFunctionDeclaration = new ConceptDescriptorBuilder("MPSGobstones.structure.FunctionDeclaration", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac4f69cb5L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "MPSGobstones.structure.RoutineDeclaration", "MPSGobstones.structure.CanBeRestricted").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac4fa21bbL), MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xc13f236fea48aedL)).childDescriptors(new ConceptDescriptorBuilder.Link(9156895335215722413L, "return", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL), false, false, false), new ConceptDescriptorBuilder.Link(9156895335215722418L, "statements", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c1L), true, true, false)).children(new String[]{"return", "statements"}, new boolean[]{false, true}).alias("function", "").create();
  /*package*/ final ConceptDescriptor myConceptFunctionInvocation = new ConceptDescriptorBuilder("MPSGobstones.structure.FunctionInvocation", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac4f69cb6L)).super_("MPSGobstones.structure.Expression").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL)).parents("MPSGobstones.structure.Expression", "MPSGobstones.structure.RoutineInvocation").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL), MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac4fa27ddL)).create();
  /*package*/ final ConceptDescriptor myConceptGreaterEqualsThan = new ConceptDescriptorBuilder("MPSGobstones.structure.GreaterEqualsThan", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a001431L)).super_("MPSGobstones.structure.Comparision").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a001434L)).parents("MPSGobstones.structure.Comparision").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a001434L)).alias(">=", "").create();
  /*package*/ final ConceptDescriptor myConceptGreaterThan = new ConceptDescriptorBuilder("MPSGobstones.structure.GreaterThan", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a00142fL)).super_("MPSGobstones.structure.Comparision").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a001434L)).parents("MPSGobstones.structure.Comparision").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a001434L)).alias(">", "").create();
  /*package*/ final ConceptDescriptor myConceptGreen = new ConceptDescriptorBuilder("MPSGobstones.structure.Green", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5610a47L)).super_("MPSGobstones.structure.Color").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5610a42L)).parents("MPSGobstones.structure.Color").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5610a42L)).alias("Verde", "Bolita de color verde").create();
  /*package*/ final ConceptDescriptor myConceptHasColor = new ConceptDescriptorBuilder("MPSGobstones.structure.HasColor", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac51d60bfL)).super_("MPSGobstones.structure.NativeFunction").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac51bb110L)).parents("MPSGobstones.structure.NativeFunction").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac51bb110L)).alias("hayBolitas", "Pregunta si hay bolitas de determinado color").create();
  /*package*/ final ConceptDescriptor myConceptIfElseStatement = new ConceptDescriptorBuilder("MPSGobstones.structure.IfElseStatement", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x6b36268ffc4fb929L)).super_("MPSGobstones.structure.Statement").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c1L)).parents("MPSGobstones.structure.Statement", "MPSGobstones.structure.CanBeRestricted").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c1L), MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xc13f236fea48aedL)).childDescriptors(new ConceptDescriptorBuilder.Link(7725404610656009059L, "condition", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL), false, false, false), new ConceptDescriptorBuilder.Link(7725404610656009061L, "ifTrueBlock", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c2L), false, false, false), new ConceptDescriptorBuilder.Link(7725404610656009064L, "ifFalseBlock", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c2L), false, false, false)).children(new String[]{"condition", "ifTrueBlock", "ifFalseBlock"}, new boolean[]{false, false, false}).alias("if", "Alternativa condicional").create();
  /*package*/ final ConceptDescriptor myConceptIntegerLiteral = new ConceptDescriptorBuilder("MPSGobstones.structure.IntegerLiteral", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a43df6L)).super_("MPSGobstones.structure.Value").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x43bfda4b30d4155eL)).parents("MPSGobstones.structure.Value").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x43bfda4b30d4155eL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(7026781676426771959L, "value")).properties("value").alias("int", "N\u00famero Entero").create();
  /*package*/ final ConceptDescriptor myConceptIntegerOperation = new ConceptDescriptorBuilder("MPSGobstones.structure.IntegerOperation", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e670253faaceL)).super_("MPSGobstones.structure.BinaryOperation").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a8201dL)).parents("MPSGobstones.structure.BinaryOperation").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a8201dL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptIntegerType = new ConceptDescriptorBuilder("MPSGobstones.structure.IntegerType", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a461c4L)).super_("MPSGobstones.structure.Type").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a2abd5L)).parents("MPSGobstones.structure.Type").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a2abd5L)).alias("n\u00famero", "N\u00famero entero").create();
  /*package*/ final ConceptDescriptor myConceptLessEqualThan = new ConceptDescriptorBuilder("MPSGobstones.structure.LessEqualThan", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a001432L)).super_("MPSGobstones.structure.Comparision").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a001434L)).parents("MPSGobstones.structure.Comparision").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a001434L)).alias("<=", "").create();
  /*package*/ final ConceptDescriptor myConceptLessThan = new ConceptDescriptorBuilder("MPSGobstones.structure.LessThan", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a001430L)).super_("MPSGobstones.structure.Comparision").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a001434L)).parents("MPSGobstones.structure.Comparision").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a001434L)).alias("<", "").create();
  /*package*/ final ConceptDescriptor myConceptLibrary = new ConceptDescriptorBuilder("MPSGobstones.structure.Library", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x57ba0e75ee9239d1L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(6321380926644435412L, "routines", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac4fa21bbL), true, true, false)).children(new String[]{"routines"}, new boolean[]{true}).alias("Biblioteca", "").create();
  /*package*/ final ConceptDescriptor myConceptLogicalOperation = new ConceptDescriptorBuilder("MPSGobstones.structure.LogicalOperation", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a3bb71L)).super_("MPSGobstones.structure.BinaryOperation").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a8201dL)).parents("MPSGobstones.structure.BinaryOperation").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a8201dL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptLoopStatement = new ConceptDescriptorBuilder("MPSGobstones.structure.LoopStatement", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e6702540ea3fL)).super_("MPSGobstones.structure.Statement").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c1L)).parents("MPSGobstones.structure.Statement", "MPSGobstones.structure.CanBeRestricted").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c1L), MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xc13f236fea48aedL)).childDescriptors(new ConceptDescriptorBuilder.Link(4004919084779583333L, "body", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c2L), false, false, false)).children(new String[]{"body"}, new boolean[]{false}).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptModOperation = new ConceptDescriptorBuilder("MPSGobstones.structure.ModOperation", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b561c82dL)).super_("MPSGobstones.structure.IntegerOperation").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e670253faaceL)).parents("MPSGobstones.structure.IntegerOperation").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e670253faaceL)).alias("%", "M\u00f3dulo").create();
  /*package*/ final ConceptDescriptor myConceptMoveClaw = new ConceptDescriptorBuilder("MPSGobstones.structure.MoveClaw", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x53e32d0c67b4d50bL)).super_("MPSGobstones.structure.NativeProcedure").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x673143db71a8be45L)).parents("MPSGobstones.structure.NativeProcedure").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x673143db71a8be45L)).alias("Mover", "Comando primitivo para mover el cabezal").create();
  /*package*/ final ConceptDescriptor myConceptMulOperation = new ConceptDescriptorBuilder("MPSGobstones.structure.MulOperation", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e670253faacdL)).super_("MPSGobstones.structure.IntegerOperation").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e670253faaceL)).parents("MPSGobstones.structure.IntegerOperation").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e670253faaceL)).alias("*", "Multiplicaci\u00f3n").create();
  /*package*/ final ConceptDescriptor myConceptNativeFunction = new ConceptDescriptorBuilder("MPSGobstones.structure.NativeFunction", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac51bb110L)).super_("MPSGobstones.structure.Expression").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL)).parents("MPSGobstones.structure.Expression").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL)).childDescriptors(new ConceptDescriptorBuilder.Link(9156895335218141393L, "expression", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptNativeProcedure = new ConceptDescriptorBuilder("MPSGobstones.structure.NativeProcedure", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x673143db71a8be45L)).super_("MPSGobstones.structure.Statement").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c1L)).parents("MPSGobstones.structure.Statement").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c1L)).childDescriptors(new ConceptDescriptorBuilder.Link(7435799069549182534L, "expression", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptNorth = new ConceptDescriptorBuilder("MPSGobstones.structure.North", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5614f40L)).super_("MPSGobstones.structure.Direction").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5614da9L)).parents("MPSGobstones.structure.Direction").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5614da9L)).alias("Norte", "Direcci\u00f3n").create();
  /*package*/ final ConceptDescriptor myConceptNotEqualsTo = new ConceptDescriptorBuilder("MPSGobstones.structure.NotEqualsTo", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac51bb111L)).super_("MPSGobstones.structure.Comparision").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a001434L)).parents("MPSGobstones.structure.Comparision").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a001434L)).alias("/=", "Desigualdad").create();
  /*package*/ final ConceptDescriptor myConceptOrExpression = new ConceptDescriptorBuilder("MPSGobstones.structure.OrExpression", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a3cd9eL)).super_("MPSGobstones.structure.LogicalOperation").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a3bb71L)).parents("MPSGobstones.structure.LogicalOperation").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a3bb71L)).alias("||", "Operaci\u00f3n l\u00f3gica").create();
  /*package*/ final ConceptDescriptor myConceptParenthesisExpression = new ConceptDescriptorBuilder("MPSGobstones.structure.ParenthesisExpression", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a40ba1L)).super_("MPSGobstones.structure.Expression").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL)).parents("MPSGobstones.structure.Expression").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL)).childDescriptors(new ConceptDescriptorBuilder.Link(7026781676426759074L, "contained", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL), false, false, false)).children(new String[]{"contained"}, new boolean[]{false}).alias("()", "Par\u00e9ntesis").create();
  /*package*/ final ConceptDescriptor myConceptPlusOperation = new ConceptDescriptorBuilder("MPSGobstones.structure.PlusOperation", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e670253faacbL)).super_("MPSGobstones.structure.IntegerOperation").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e670253faaceL)).parents("MPSGobstones.structure.IntegerOperation").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e670253faaceL)).alias("+", "Adici\u00f3n").create();
  /*package*/ final ConceptDescriptor myConceptPowOperation = new ConceptDescriptorBuilder("MPSGobstones.structure.PowOperation", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac51bb9fbL)).super_("MPSGobstones.structure.IntegerOperation").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e670253faaceL)).parents("MPSGobstones.structure.IntegerOperation").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e670253faaceL)).alias("^", "").create();
  /*package*/ final ConceptDescriptor myConceptProcedureDeclaration = new ConceptDescriptorBuilder("MPSGobstones.structure.ProcedureDeclaration", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x332b7c31ccbf9e41L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "MPSGobstones.structure.RoutineDeclaration", "MPSGobstones.structure.CanBeRestricted").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac4fa21bbL), MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xc13f236fea48aedL)).childDescriptors(new ConceptDescriptorBuilder.Link(3687177273263234594L, "body", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c2L), false, false, false)).children(new String[]{"body"}, new boolean[]{false}).alias("procedure", "").create();
  /*package*/ final ConceptDescriptor myConceptProcedureInvocation = new ConceptDescriptorBuilder("MPSGobstones.structure.ProcedureInvocation", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x332b7c31ccc227d8L)).super_("MPSGobstones.structure.Statement").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c1L)).parents("MPSGobstones.structure.Statement", "MPSGobstones.structure.RoutineInvocation").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c1L), MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac4fa27ddL)).create();
  /*package*/ final ConceptDescriptor myConceptProgram = new ConceptDescriptorBuilder("MPSGobstones.structure.Program", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a58e1dL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.lang.core.structure.ScopeProvider").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L)).childDescriptors(new ConceptDescriptorBuilder.Link(725219836248411837L, "body", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c2L), false, false, false), new ConceptDescriptorBuilder.Link(3687177273263237593L, "routines", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac4fa21bbL), true, true, false)).children(new String[]{"body", "routines"}, new boolean[]{false, true}).create();
  /*package*/ final ConceptDescriptor myConceptPutColor = new ConceptDescriptorBuilder("MPSGobstones.structure.PutColor", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x53e32d0c67b45650L)).super_("MPSGobstones.structure.NativeProcedure").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x673143db71a8be45L)).parents("MPSGobstones.structure.NativeProcedure").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x673143db71a8be45L)).alias("Poner", "Comando primitivo para poner bolitas").create();
  /*package*/ final ConceptDescriptor myConceptRed = new ConceptDescriptorBuilder("MPSGobstones.structure.Red", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5610a45L)).super_("MPSGobstones.structure.Color").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5610a42L)).parents("MPSGobstones.structure.Color").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5610a42L)).alias("Rojo", "Bolita de color rojo").create();
  /*package*/ final ConceptDescriptor myConceptRemoveColor = new ConceptDescriptorBuilder("MPSGobstones.structure.RemoveColor", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x43bfda4b30dad767L)).super_("MPSGobstones.structure.NativeProcedure").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x673143db71a8be45L)).parents("MPSGobstones.structure.NativeProcedure").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x673143db71a8be45L)).alias("Sacar", "Comando primitivo para sacar bolitas").create();
  /*package*/ final ConceptDescriptor myConceptRepeatStatement = new ConceptDescriptorBuilder("MPSGobstones.structure.RepeatStatement", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x379454b04a7864c4L)).super_("MPSGobstones.structure.LoopStatement").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e6702540ea3fL)).parents("MPSGobstones.structure.LoopStatement", "MPSGobstones.structure.CanBeRestricted").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e6702540ea3fL), MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xc13f236fea48aedL)).childDescriptors(new ConceptDescriptorBuilder.Link(3076203700975325608L, "times", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL), false, false, false)).children(new String[]{"times"}, new boolean[]{false}).alias("repeat", "Bucle repeat").create();
  /*package*/ final ConceptDescriptor myConceptRoutineDeclaration = new ConceptDescriptorBuilder("MPSGobstones.structure.RoutineDeclaration", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac4fa21bbL)).interface_().parents("jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(9156895335215931836L, "arguments", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x32ccd531a47ba7f6L), true, true, false)).children(new String[]{"arguments"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptRoutineInvocation = new ConceptDescriptorBuilder("MPSGobstones.structure.RoutineInvocation", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac4fa27ddL)).interface_().referenceDescriptors(new ConceptDescriptorBuilder.Ref(9156895335216169632L, "declaration", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac4fa21bbL), false)).references("declaration").childDescriptors(new ConceptDescriptorBuilder.Link(6162130916098300501L, "parameters", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL), true, true, false)).children(new String[]{"parameters"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptSouth = new ConceptDescriptorBuilder("MPSGobstones.structure.South", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5614f41L)).super_("MPSGobstones.structure.Direction").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5614da9L)).parents("MPSGobstones.structure.Direction").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5614da9L)).alias("Sur", "Direcci\u00f3n").create();
  /*package*/ final ConceptDescriptor myConceptStatement = new ConceptDescriptorBuilder("MPSGobstones.structure.Statement", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c1L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptStatementList = new ConceptDescriptorBuilder("MPSGobstones.structure.StatementList", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c2L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.ScopeProvider", "jetbrains.mps.lang.core.structure.ScopeFacade").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x2ea65c0b397bd5beL)).childDescriptors(new ConceptDescriptorBuilder.Link(725219836248412355L, "statements", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c1L), true, true, false)).children(new String[]{"statements"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptStonesQuantity = new ConceptDescriptorBuilder("MPSGobstones.structure.StonesQuantity", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac51e06bcL)).super_("MPSGobstones.structure.NativeFunction").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac51bb110L)).parents("MPSGobstones.structure.NativeFunction").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x7f13d3cac51bb110L)).alias("nroBolitas", "Pregunta si hay bolitas de determinado color").create();
  /*package*/ final ConceptDescriptor myConceptTrue = new ConceptDescriptorBuilder("MPSGobstones.structure.True", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a81182L)).super_("MPSGobstones.structure.BooleanLiteral").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a7f180L)).parents("MPSGobstones.structure.BooleanLiteral").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a7f180L)).alias("True", "Constante booleana").create();
  /*package*/ final ConceptDescriptor myConceptType = new ConceptDescriptorBuilder("MPSGobstones.structure.Type", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a2abd5L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.IType", "jetbrains.mps.lang.core.structure.InterfacePart").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f8a0774f2L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x12509ddfaa98f128L)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptUnaryNot = new ConceptDescriptorBuilder("MPSGobstones.structure.UnaryNot", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a3cd9fL)).super_("MPSGobstones.structure.Expression").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL)).parents("MPSGobstones.structure.Expression", "MPSGobstones.structure.BinaryLike").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL), MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x53c2c23e11d33879L)).childDescriptors(new ConceptDescriptorBuilder.Link(7026781676426743200L, "expression", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).alias("not", "Operaci\u00f3n l\u00f3gica").create();
  /*package*/ final ConceptDescriptor myConceptValue = new ConceptDescriptorBuilder("MPSGobstones.structure.Value", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x43bfda4b30d4155eL)).super_("MPSGobstones.structure.Expression").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL)).parents("MPSGobstones.structure.Expression").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptVariableAssignment = new ConceptDescriptorBuilder("MPSGobstones.structure.VariableAssignment", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x299df48a5a06b9ceL)).super_("MPSGobstones.structure.Statement").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c1L)).parents("MPSGobstones.structure.Statement").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a750c1L)).childDescriptors(new ConceptDescriptorBuilder.Link(2998821801951680357L, "expression", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL), false, false, false), new ConceptDescriptorBuilder.Link(3660535006335100530L, "variable", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x32ccd531a47ba7f6L), false, false, false)).children(new String[]{"expression", "variable"}, new boolean[]{false, false}).alias(":=", "").create();
  /*package*/ final ConceptDescriptor myConceptVariableName = new ConceptDescriptorBuilder("MPSGobstones.structure.VariableName", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x32ccd531a47ba7f6L)).super_("MPSGobstones.structure.Expression").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL)).parents("MPSGobstones.structure.Expression").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(3660535006335051769L, "name")).properties("name").create();
  /*package*/ final ConceptDescriptor myConceptVariableReference = new ConceptDescriptorBuilder("MPSGobstones.structure.VariableReference", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x53c2c23e11d53505L)).super_("MPSGobstones.structure.Expression").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL)).parents("MPSGobstones.structure.Expression").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(6035600022472832262L, "variable", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x32ccd531a47ba7f6L), false)).references("variable").create();
  /*package*/ final ConceptDescriptor myConceptWest = new ConceptDescriptorBuilder("MPSGobstones.structure.West", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5614f43L)).super_("MPSGobstones.structure.Direction").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5614da9L)).parents("MPSGobstones.structure.Direction").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x2ab0def7b5614da9L)).alias("Oeste", "Direcci\u00f3n").create();
  /*package*/ final ConceptDescriptor myConceptWhileStatement = new ConceptDescriptorBuilder("MPSGobstones.structure.WhileStatement", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x379454b04a788182L)).super_("MPSGobstones.structure.LoopStatement").super_(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e6702540ea3fL)).parents("MPSGobstones.structure.LoopStatement", "MPSGobstones.structure.CanBeRestricted").parentIds(MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x4975e6702540ea3fL), MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xc13f236fea48aedL)).childDescriptors(new ConceptDescriptorBuilder.Link(4004919084779595019L, "condition", MetaIdFactory.conceptId(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0xa107f9943a5958eL), false, false, false)).children(new String[]{"condition"}, new boolean[]{false}).alias("while", "Bucle while").create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAndExpression, myConceptBinaryLike, myConceptBinaryOperation, myConceptBlack, myConceptBlue, myConceptBoardDefinition, myConceptBoardRowDefinition, myConceptBooleanLiteral, myConceptBooleanType, myConceptCanBeRestricted, myConceptCanMoveClaw, myConceptCellDefinition, myConceptColor, myConceptColorType, myConceptComparision, myConceptDiffOperation, myConceptDirection, myConceptDirectionType, myConceptDivOperation, myConceptEast, myConceptEqualsTo, myConceptExpression, myConceptFalse, myConceptFunctionDeclaration, myConceptFunctionInvocation, myConceptGreaterEqualsThan, myConceptGreaterThan, myConceptGreen, myConceptHasColor, myConceptIfElseStatement, myConceptIntegerLiteral, myConceptIntegerOperation, myConceptIntegerType, myConceptLessEqualThan, myConceptLessThan, myConceptLibrary, myConceptLogicalOperation, myConceptLoopStatement, myConceptModOperation, myConceptMoveClaw, myConceptMulOperation, myConceptNativeFunction, myConceptNativeProcedure, myConceptNorth, myConceptNotEqualsTo, myConceptOrExpression, myConceptParenthesisExpression, myConceptPlusOperation, myConceptPowOperation, myConceptProcedureDeclaration, myConceptProcedureInvocation, myConceptProgram, myConceptPutColor, myConceptRed, myConceptRemoveColor, myConceptRepeatStatement, myConceptRoutineDeclaration, myConceptRoutineInvocation, myConceptSouth, myConceptStatement, myConceptStatementList, myConceptStonesQuantity, myConceptTrue, myConceptType, myConceptUnaryNot, myConceptValue, myConceptVariableAssignment, myConceptVariableName, myConceptVariableReference, myConceptWest, myConceptWhileStatement);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0xc, conceptFqName)) {
      case 0:
        return myConceptAndExpression;
      case 1:
        return myConceptBinaryLike;
      case 2:
        return myConceptBinaryOperation;
      case 3:
        return myConceptBlack;
      case 4:
        return myConceptBlue;
      case 5:
        return myConceptBoardDefinition;
      case 6:
        return myConceptBoardRowDefinition;
      case 7:
        return myConceptBooleanLiteral;
      case 8:
        return myConceptBooleanType;
      case 9:
        return myConceptCanBeRestricted;
      case 10:
        return myConceptCanMoveClaw;
      case 11:
        return myConceptCellDefinition;
      case 12:
        return myConceptColor;
      case 13:
        return myConceptColorType;
      case 14:
        return myConceptComparision;
      case 15:
        return myConceptDiffOperation;
      case 16:
        return myConceptDirection;
      case 17:
        return myConceptDirectionType;
      case 18:
        return myConceptDivOperation;
      case 19:
        return myConceptEast;
      case 20:
        return myConceptEqualsTo;
      case 21:
        return myConceptExpression;
      case 22:
        return myConceptFalse;
      case 23:
        return myConceptFunctionDeclaration;
      case 24:
        return myConceptFunctionInvocation;
      case 25:
        return myConceptGreaterEqualsThan;
      case 26:
        return myConceptGreaterThan;
      case 27:
        return myConceptGreen;
      case 28:
        return myConceptHasColor;
      case 29:
        return myConceptIfElseStatement;
      case 30:
        return myConceptIntegerLiteral;
      case 31:
        return myConceptIntegerOperation;
      case 32:
        return myConceptIntegerType;
      case 33:
        return myConceptLessEqualThan;
      case 34:
        return myConceptLessThan;
      case 35:
        return myConceptLibrary;
      case 36:
        return myConceptLogicalOperation;
      case 37:
        return myConceptLoopStatement;
      case 38:
        return myConceptModOperation;
      case 39:
        return myConceptMoveClaw;
      case 40:
        return myConceptMulOperation;
      case 41:
        return myConceptNativeFunction;
      case 42:
        return myConceptNativeProcedure;
      case 43:
        return myConceptNorth;
      case 44:
        return myConceptNotEqualsTo;
      case 45:
        return myConceptOrExpression;
      case 46:
        return myConceptParenthesisExpression;
      case 47:
        return myConceptPlusOperation;
      case 48:
        return myConceptPowOperation;
      case 49:
        return myConceptProcedureDeclaration;
      case 50:
        return myConceptProcedureInvocation;
      case 51:
        return myConceptProgram;
      case 52:
        return myConceptPutColor;
      case 53:
        return myConceptRed;
      case 54:
        return myConceptRemoveColor;
      case 55:
        return myConceptRepeatStatement;
      case 56:
        return myConceptRoutineDeclaration;
      case 57:
        return myConceptRoutineInvocation;
      case 58:
        return myConceptSouth;
      case 59:
        return myConceptStatement;
      case 60:
        return myConceptStatementList;
      case 61:
        return myConceptStonesQuantity;
      case 62:
        return myConceptTrue;
      case 63:
        return myConceptType;
      case 64:
        return myConceptUnaryNot;
      case 65:
        return myConceptValue;
      case 66:
        return myConceptVariableAssignment;
      case 67:
        return myConceptVariableName;
      case 68:
        return myConceptVariableReference;
      case 69:
        return myConceptWest;
      case 70:
        return myConceptWhileStatement;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0xc = new String[]{"MPSGobstones.structure.AndExpression", "MPSGobstones.structure.BinaryLike", "MPSGobstones.structure.BinaryOperation", "MPSGobstones.structure.Black", "MPSGobstones.structure.Blue", "MPSGobstones.structure.BoardDefinition", "MPSGobstones.structure.BoardRowDefinition", "MPSGobstones.structure.BooleanLiteral", "MPSGobstones.structure.BooleanType", "MPSGobstones.structure.CanBeRestricted", "MPSGobstones.structure.CanMoveClaw", "MPSGobstones.structure.CellDefinition", "MPSGobstones.structure.Color", "MPSGobstones.structure.ColorType", "MPSGobstones.structure.Comparision", "MPSGobstones.structure.DiffOperation", "MPSGobstones.structure.Direction", "MPSGobstones.structure.DirectionType", "MPSGobstones.structure.DivOperation", "MPSGobstones.structure.East", "MPSGobstones.structure.EqualsTo", "MPSGobstones.structure.Expression", "MPSGobstones.structure.False", "MPSGobstones.structure.FunctionDeclaration", "MPSGobstones.structure.FunctionInvocation", "MPSGobstones.structure.GreaterEqualsThan", "MPSGobstones.structure.GreaterThan", "MPSGobstones.structure.Green", "MPSGobstones.structure.HasColor", "MPSGobstones.structure.IfElseStatement", "MPSGobstones.structure.IntegerLiteral", "MPSGobstones.structure.IntegerOperation", "MPSGobstones.structure.IntegerType", "MPSGobstones.structure.LessEqualThan", "MPSGobstones.structure.LessThan", "MPSGobstones.structure.Library", "MPSGobstones.structure.LogicalOperation", "MPSGobstones.structure.LoopStatement", "MPSGobstones.structure.ModOperation", "MPSGobstones.structure.MoveClaw", "MPSGobstones.structure.MulOperation", "MPSGobstones.structure.NativeFunction", "MPSGobstones.structure.NativeProcedure", "MPSGobstones.structure.North", "MPSGobstones.structure.NotEqualsTo", "MPSGobstones.structure.OrExpression", "MPSGobstones.structure.ParenthesisExpression", "MPSGobstones.structure.PlusOperation", "MPSGobstones.structure.PowOperation", "MPSGobstones.structure.ProcedureDeclaration", "MPSGobstones.structure.ProcedureInvocation", "MPSGobstones.structure.Program", "MPSGobstones.structure.PutColor", "MPSGobstones.structure.Red", "MPSGobstones.structure.RemoveColor", "MPSGobstones.structure.RepeatStatement", "MPSGobstones.structure.RoutineDeclaration", "MPSGobstones.structure.RoutineInvocation", "MPSGobstones.structure.South", "MPSGobstones.structure.Statement", "MPSGobstones.structure.StatementList", "MPSGobstones.structure.StonesQuantity", "MPSGobstones.structure.True", "MPSGobstones.structure.Type", "MPSGobstones.structure.UnaryNot", "MPSGobstones.structure.Value", "MPSGobstones.structure.VariableAssignment", "MPSGobstones.structure.VariableName", "MPSGobstones.structure.VariableReference", "MPSGobstones.structure.West", "MPSGobstones.structure.WhileStatement"};
}
