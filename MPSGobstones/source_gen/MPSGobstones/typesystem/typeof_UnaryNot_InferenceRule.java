package MPSGobstones.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.typesystem.inference.EquationInfo;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class typeof_UnaryNot_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_UnaryNot_InferenceRule() {
  }
  public void applyRule(final SNode unaryNot, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    SNode booleanType = SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a2abd4L, "MPSGobstones.structure.BooleanType")));
    {
      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(unaryNot, MetaAdapterFactory.getContainmentLink(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a3cd9fL, 0x618424b489a3cda0L, "expression"));
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:a3d7b434-0554-4138-a6f0-66b6a9099d5b(MPSGobstones.typesystem)", "7026781676426743905", 0, null);
      typeCheckingContext.createLessThanInequality((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:a3d7b434-0554-4138-a6f0-66b6a9099d5b(MPSGobstones.typesystem)", "7026781676426743914", true), (SNode) booleanType, false, true, _info_12389875345);
    }
    {
      SNode _nodeToCheck_1029348928467 = unaryNot;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:a3d7b434-0554-4138-a6f0-66b6a9099d5b(MPSGobstones.typesystem)", "7026781676426745246", 0, null);
      typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:a3d7b434-0554-4138-a6f0-66b6a9099d5b(MPSGobstones.typesystem)", "7026781676426745047", true), (SNode) booleanType, _info_12389875345);
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return MetaAdapterFactory.getConcept(0xcb8c78e791643a8L, 0x8d8ea292ead7a894L, 0x618424b489a3cd9fL, "MPSGobstones.structure.UnaryNot");
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
}
